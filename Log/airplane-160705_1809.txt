-o
compute-0-20
2016年  7月  5日 火曜日 18:09:28 JST
/rda2/DATABASE/TMW/airplane.pgm -> Encoded_File/airplane.mrp (512x512)
------------------------------------------------------------------
NUM_CLASS 	= 64
MAX_PRD_ORDER 	= 110
coef_precision 	= 6
num_pmodel 	= 16
pm_accuracy 	= 3
max_iteration 	= 100
f_mmse 		= 0
f_optpred 	= 1
quadtree_depth 	= 4
TemplateM	= 1
Parallel Threads= 8
------------------------------------------------------------------
Calculating Template Matching
[ 0] cost = 1650754  963791 -> 941889 *
[ 1] cost = 939189  936501 -> 930105 *
[ 2] cost = 931749  929890 -> 926104 *
[ 3] cost = 929202  927391 -> 924695 *
[ 4] cost = 927805  926319 -> 924251 *
[ 5] cost = 927130  925401 -> 923590 *
[ 6] cost = 925246  923950 -> 922436 *
[ 7] cost = 925678  924414 -> 923032
[ 8] cost = 924952  923742 -> 922301 *
[ 9] cost = 924747  923603 -> 922221 *
[10] cost = 923865  922791 -> 921670 *
[11] cost = 923886  922633 -> 921468 *
[12] cost = 924109  922989 -> 921663
[13] cost = 923959  922769 -> 921373 *
[14] cost = 924579  923437 -> 922253
[15] cost = 924103  922516 -> 921272 *
[16] cost = 924217  922732 -> 921572
[17] cost = 923825  922613 -> 921222 *
[18] cost = 923570  922388 -> 921056 *
[19] cost = 922713  921709 -> 920584 *
[20] cost = 922672  921657 -> 920635
[21] cost = 923091  921930 -> 920930
[22] cost = 923203  921996 -> 920950
[23] cost = 922867  921778 -> 920806
[24] cost = 923349  922255 -> 921203
[25] cost = 923658  922575 -> 921475
[26] cost = 922949  921794 -> 920802
[27] cost = 923493  922422 -> 921271
[28] cost = 923233  922041 -> 920885
[29] cost = 923304  921945 -> 920914
cost = 920246
INIT_MASK = 0
( 0) cost = 920762[7268] ->[op_group] -> 919714 [op_c] -> 918132[4118] -> 921746[15252] (26638) -> 919922 --> 946560 *
( 1) cost = 919684[6685] ->[op_group] -> 918840 [op_c] -> 918791[2874] -> 915871[15724] (25283) -> 915580 --> 940863 *
( 2) cost = 915996[6370] ->[op_group] -> 915113 [op_c] -> 915102[2712] -> 913704[16083] (25165) -> 913523 --> 938688 *
( 3) cost = 913785[6250] ->[op_group] -> 913060 [op_c] -> 913054[2673] -> 912507[16705] (25628) -> 912391 --> 938019 *
( 4) cost = 912658[6195] ->[op_group] -> 912114 [op_c] -> 912103[2584] -> 912318[16346] (25125) -> 912261 --> 937386 *
( 5) cost = 912627[6085] ->[op_group] -> 912125 [op_c] -> 912124[2567] -> 911870[16455] (25107) -> 911804 --> 936911 *
( 6) cost = 912119[6005] ->[op_group] -> 911685 [op_c] -> 911684[2520] -> 912012[16284] (24809) -> 911957 --> 936766 *
( 7) cost = 912340[5936] ->[op_group] -> 911838 [op_c] -> 911838[2499] -> 911468[16688] (25123) -> 911443 --> 936566 *
( 8) cost = 911657[5870] ->[op_group] -> 911268 [op_c] -> 911267[2478] -> 911503[16420] (24768) -> 911454 --> 936222 *
( 9) cost = 911734[5850] ->[op_group] -> 911337 [op_c] -> 911337[2467] -> 911064[17035] (25352) -> 911048 --> 936400
(10) cost = 911314[5815] ->[op_group] -> 910956 [op_c] -> 910956[2498] -> 911206[16855] (25168) -> 911179 --> 936347
(11) cost = 911418[5773] ->[op_group] -> 911042 [op_c] -> 911042[2484] -> 910932[17006] (25263) -> 910915 --> 936178 *
(12) cost = 911109[5696] ->[op_group] -> 910758 [op_c] -> 910758[2468] -> 910797[17045] (25209) -> 910786 --> 935995 *
(13) cost = 910972[5665] ->[op_group] -> 910565 [op_c] -> 910556[2491] -> 910526[17192] (25348) -> 910516 --> 935864 *
(14) cost = 910758[5654] ->[op_group] -> 910461 [op_c] -> 910461[2462] -> 910329[17355] (25471) -> 910298 --> 935769 *
(15) cost = 910544[5651] ->[op_group] -> 910196 [op_c] -> 910196[2454] -> 910549[17208] (25313) -> 910524 --> 935837
(16) cost = 910842[5656] ->[op_group] -> 910417 [op_c] -> 910417[2436] -> 910341[17380] (25472) -> 910318 --> 935790
(17) cost = 910700[5624] ->[op_group] -> 910300 [op_c] -> 910300[2450] -> 910569[17135] (25209) -> 910558 --> 935767 *
(18) cost = 910733[5656] ->[op_group] -> 910390 [op_c] -> 910389[2465] -> 910423[17353] (25474) -> 910406 --> 935880
(19) cost = 910609[5648] ->[op_group] -> 910245 [op_c] -> 910245[2482] -> 910154[17332] (25462) -> 910141 --> 935603 *
(20) cost = 910463[5658] ->[op_group] -> 910057 [op_c] -> 910057[2481] -> 909789[17570] (25709) -> 909773 --> 935482 *
(21) cost = 910023[5638] ->[op_group] -> 909712 [op_c] -> 909712[2469] -> 910069[17561] (25668) -> 910062 --> 935730
(22) cost = 910269[5641] ->[op_group] -> 909933 [op_c] -> 909932[2466] -> 909775[17832] (25939) -> 909767 --> 935706
(23) cost = 909945[5605] ->[op_group] -> 909595 [op_c] -> 909593[2482] -> 909735[17650] (25737) -> 909731 --> 935468 *
(24) cost = 909936[5593] ->[op_group] -> 909586 [op_c] -> 909586[2472] -> 909574[17706] (25771) -> 909560 --> 935331 *
(25) cost = 909775[5588] ->[op_group] -> 909416 [op_c] -> 909415[2482] -> 909584[17612] (25682) -> 909557 --> 935239 *
(26) cost = 909780[5585] ->[op_group] -> 909384 [op_c] -> 909384[2479] -> 909339[17885] (25949) -> 909327 --> 935276
(27) cost = 909555[5579] ->[op_group] -> 909230 [op_c] -> 909230[2478] -> 909371[17939] (25996) -> 909359 --> 935355
(28) cost = 909644[5587] ->[op_group] -> 909277 [op_c] -> 909276[2489] -> 909203[18171] (26247) -> 909194 --> 935441
(29) cost = 909527[5570] ->[op_group] -> 909232 [op_c] -> 909221[2431] -> 909500[17975] (25976) -> 909498 --> 935474
(30) cost = 909765[5560] ->[op_group] -> 909458 [op_c] -> 909458[2441] -> 909470[18011] (26012) -> 909459 --> 935471
(31) cost = 909680[5544] ->[op_group] -> 909352 [op_c] -> 909351[2413] -> 909620[17713] (25670) -> 909612 --> 935282
(32) cost = 909901[5553] ->[op_group] -> 909507 [op_c] -> 909506[2446] -> 909249[18178] (26177) -> 909245 --> 935422
(33) cost = 909409[5554] ->[op_group] -> 909097 [op_c] -> 909097[2420] -> 909283[18170] (26144) -> 909259 --> 935403
(34) cost = 909412[5576] ->[op_group] -> 909068 [op_c] -> 909067[2454] -> 909633[17821] (25851) -> 909612 --> 935463
(35) cost = 909771[5587] ->[op_group] -> 909474 [op_c] -> 909474[2453] -> 909501[17754] (25794) -> 909489 --> 935283
M = 63
TEMP_CL : 0
header info.	:       111 bits
class info.	:     17800 bits
predictors	:      5616 bits
thresholds	:      2528 bits
mask_info	:       504 bits
pred. errors	:    909840 bits
------------------------------
total		:    936399 bits
coding rate	:   3.57208 b/p
cpu time: 11083.56 sec.
******* differences between entropy and rate *******
(gr)  [shape]	entropy		|rate		|fitness	|pel
------------------------------------------------------------------------------
( 0)  [3.2]	         3	|       143	|   -43.980	|        21
( 1)  [0.2]	         0	|         0	|   1.000	|         0
( 2)  [0.2]	        24	|       133	|   -3.536	|        38
( 3)  [1.6]	      8539	|     10153	|   0.811	|      6905
( 4)  [1.6]	     25788	|     28255	|   0.904	|     14495
( 5)  [1.8]	     77037	|     82801	|   0.925	|     33632
( 6)  [1.8]	    134023	|    141503	|   0.944	|     48329
( 7)  [1.8]	    168884	|    175143	|   0.963	|     51839
( 8)  [1.8]	     99398	|    102817	|   0.966	|     26602
( 9)  [1.6]	    140009	|    148032	|   0.943	|     33314
(10)  [1.4]	    100364	|    105648	|   0.947	|     21550
(11)  [1.4]	     79589	|     83134	|   0.955	|     15537
(12)  [1.6]	     46254	|     46725	|   0.990	|      8260
(13)  [0.6]	       942	|       947	|   0.994	|       168
(14)  [2.4]	      2562	|      2580	|   0.993	|       394
(15)  [0.6]	      6806	|      6920	|   0.983	|      1060
------------------------------------------------------------------------------
all         	    890227	|    934939	|   0.950	|    262144
2016年  7月  5日 火曜日 21:14:24 JST
TEMP_CL : 0
Start Decode Image
ERROR!
